@using PagedList
@using PagedList.Mvc
@using Newtonsoft.Json;
@model IPagedList<QuanLyKhoGiaoHangNhanh.Models.KhuVuc>
@{
    var points = Model.Select(item => item.ToaDo.ToString()).ToList();
    var pointsJson = Newtonsoft.Json.JsonConvert.SerializeObject(points);
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <title>Quản Lý Giao hàng</title>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/Contents/css/General.css" />
</head>
<body>

    <div class="container">
        <div class="header d-flex justify-content-between align-items-center">
            <h1 class="flex-grow-1 text-center">
                Khu vực
            </h1>
            <form class="d-flex flex-grow-1 justify-content-center" method="get">
                <div class="col-md-5 px-2 align-content-center">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Tìm kiếm theo tên khu vực..." value="@Request.QueryString["searchTerm"]" />
                </div>
                <div class="col-md-5 px-2 align-content-center">
                    <select name="sortArea" class="form-select">
                        <option value="asc" @(Request.QueryString["sortArea"] == "asc" ? "selected" : "")>Khoảng cách: Nhỏ - Lớn</option>
                        <option value="desc" @(Request.QueryString["sortArea"] == "desc" ? "selected" : "")>Khoảng cách: Lớn - Nhỏ</option>
                    </select>
                </div>
                <div class="col-md-2 px-2 align-content-center">
                    <button type="submit" class="btn btn-warning">Lọc</button>
                </div>
            </form>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Request.QueryString["searchTerm"]))
    {
        <p class="text-muted text-">Kết quả tìm kiếm cho: <b>@Request.QueryString["searchTerm"]</b></p>
    }
    <div class="row">
        <div class="col-4">
            <div id="map" style="height: 400px; width: 100%;"></div>
        </div>
        <div class="col-8">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Nhân viên quản lý</th>
                        <th>Tên khu vực</th>
                        <th>Khoảng cách</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.NhanVien.TenNhanVien)</td>
                            <td>@Html.DisplayFor(modelItem => item.Ten)</td>
                            <td>@Html.DisplayFor(modelItem => item.KhoangCach)</td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>

    </div>
    <div class="d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index",
                          new
                          {
                              page = page,
                              searchTerm = Request.QueryString["searchTerm"],
                              sortArea = Request.QueryString["sortArea"]
                          }),
                          new PagedListRenderOptions
                          {
                              DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                              DisplayLinkToLastPage = PagedListDisplayMode.Always,
                              DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                              DisplayLinkToNextPage = PagedListDisplayMode.Always,
                              MaximumPageNumbersToDisplay = 5,
                              DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                              UlElementClasses = new[] { "pagination" },
                              LiElementClasses = new[] { "page-item" },
                          })

    </div>
    <script>
    var khuVucList = @Html.Raw(JsonConvert.SerializeObject(Model.Select(item => new { item.ToaDo, item.Ten })));
        var map = L.map('map').setView([10.845, 106.75], 12);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);
    khuVucList.forEach(function(item) {
        var toaDo = JSON.parse(item.ToaDo);
        var polygon = L.polygon(toaDo).addTo(map);
        polygon.bindPopup('<b>' + item.Ten + '</b>');
    });
    </script>

</body>
</html>
