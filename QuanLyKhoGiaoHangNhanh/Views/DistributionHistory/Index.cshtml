@using PagedList
@using PagedList.Mvc
@model IPagedList<QuanLyKhoGiaoHangNhanh.Models.LichSuPhanPhoi>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <title>Lịch sử phân phối</title>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/Contents/css/General.css" />
    <script>
        function confirmDelete(url) {
            Swal.fire({
                title: 'Bạn có chắc chắn muốn xóa?',
                text: "Thao tác này không thể hoàn tác!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy bỏ'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = url;
                }
            });
        }
        function handleRowClick(event, orderId) {
            if (event.target.closest('.btn')) {
                return;
            }
            var modal = new bootstrap.Modal(document.getElementById('detailModal'));
            modal.show();
            fetch(`/Order/Detail/${orderId}`)
                .then(response => response.text())
                .then(data => {
                    document.getElementById('orderDetailContent').innerHTML = data;
                })
                .catch(error => {
                    console.error('Error loading order details:', error);
                    document.getElementById('orderDetailContent').innerHTML = 'Không thể tải chi tiết đơn hàng.';
                });
        }
            document.addEventListener("DOMContentLoaded", function () {
            var notification = "@Html.Raw(TempData["Notification"])";
            var notificationType = "@Html.Raw(TempData["NotificationType"])";

            if (notification && notificationType) {
                Swal.fire({
                    position: "top-end",
                    text: notification,
                    icon: notificationType,
                    showConfirmButton: false,
                    timer: 1000
                });
            }
        });
    </script>
</head>
<body>
    @if (Model.Count == 0)
    {
        <h1 class="flex-grow-1 text-center">
            Lịch sử phân phối không có dữ liệu
        </h1>
    }
    else
    {
        <div class="container">
            <div class="header d-flex justify-content-between align-items-center">
                <h1 class="flex-grow-1 text-center">
                    Lịch sử phân phối
                </h1>
                <form class="d-flex flex-grow-1 justify-content-center" method="get">
                    <div class="col-md-5 px-2 align-content-center">
                        <input type="text" name="searchTerm" class="form-control" placeholder="Tìm kiếm theo tên nhân viên..." value="@Request.QueryString["searchTerm"]" />
                    </div>
                    <div class="col-md-5 px-2 align-content-center">
                        <select name="sortDistributionHistory" class="form-select">
                            <option value="asc" @(Request.QueryString["sortDistributionHistory"] == "asc" ? "selected" : "")>Số tiền: thấp đến cao</option>
                            <option value="desc" @(Request.QueryString["sortDistributionHistory"] == "desc" ? "selected" : "")>Số tiền: cao đến thấp</option>
                        </select>
                    </div>
                    <div class="col-md-2 px-2 align-content-center">
                        <button type="submit" class="btn btn-warning">Lọc</button>
                    </div>
                </form>
                <div class="action-buttons">
                    <button class="btn btn-import" onclick="window.location.href='@Url.Action("ExportToExcel", "DistributionHistory")'">
                        <i class="bi bi-file-earmark-spreadsheet"></i> Xuất Excel
                    </button>
                    <button class="btn btn-import" onclick="confirmDelete('@Url.Action("Delete", "DistributionHistory")')">
                        <i class="bi bi-trash3"></i> Xóa lịch sử
                    </button>

                </div>
            </div>
        </div>
        if (!string.IsNullOrEmpty(Request.QueryString["searchTerm"]))
        {
            <p class="text-muted text-">Kết quả tìm kiếm cho: <b>@Request.QueryString["searchTerm"]</b></p>
        }
        <div class="row">
            <div class="col-12">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Id đơn hàng</th>
                            <th>Nhân viên giao hàng</th>
                            <th>Ngày</th>
                            <th>Số tiền chuộc</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr onclick="handleRowClick(event, @item.IdDonHang)" style="cursor: pointer">
                                <td>@Html.DisplayFor(modelItem => item.IdDonHang)</td>
                                <td>@item.NhanVien.TenNhanVien</td>
                                <td>@Html.DisplayFor(modelItem => item.NgayPhanPhoi)</td>
                                <td>@String.Format("{0:0,0}", item.SoTienChuoc)</td>
                            </tr>
                        }
                    </tbody>

                </table>
            </div>
        </div>
        <div id="detailModal" class="modal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content" style="background: url('/Contents/image/image_26-hinh-nen-powerpoint-tet.jpg'); background-size: cover">
                    <div class="modal-header">
                        <h4 class="modal-title text-dark">Chi tiết đơn hàng</h4>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p id="orderDetailContent">Đang tải...</p>

                    </div>
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-center">
            @Html.PagedListPager(Model, page => Url.Action("Index",
                              new
                              {
                                  page = page,
                                  searchTerm = Request.QueryString["searchTerm"],
                                  sortDistributionHistory = Request.QueryString["sortDistributionHistory"]
                              }),
                              new PagedListRenderOptions
                              {
                                  DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                                  DisplayLinkToLastPage = PagedListDisplayMode.Always,
                                  DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                  DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                  MaximumPageNumbersToDisplay = 5,
                                  DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                                  UlElementClasses = new[] { "pagination" },
                                  LiElementClasses = new[] { "page-item" },
                              })

        </div>
    }
</body>
</html>
