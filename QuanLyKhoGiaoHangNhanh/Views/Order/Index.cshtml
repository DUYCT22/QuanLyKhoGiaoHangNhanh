@using PagedList
@using PagedList.Mvc
@model IPagedList<QuanLyKhoGiaoHangNhanh.Models.DonHang>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/Contents/css/General.css" />
    <!-- Thêm Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />

    <!-- Thêm Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <title>Quản Lý Đơn Hàng</title>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function handleRowClick(event, orderId) {
            if (event.target.closest('.btn')) {
                return;
            }
            var modal = new bootstrap.Modal(document.getElementById('detailModal'));
            modal.show();
            fetch(`/Order/Detail/${orderId}`)
                .then(response => response.text())
                .then(data => {
                    document.getElementById('orderDetailContent').innerHTML = data;
                })
                .catch(error => {
                    console.error('Error loading order details:', error);
                    document.getElementById('orderDetailContent').innerHTML = 'Không thể tải chi tiết đơn hàng.';
                });
        }
        document.addEventListener("DOMContentLoaded", function () {
        var notification = "@Html.Raw(TempData["Notification"])";
        var notificationType = "@Html.Raw(TempData["NotificationType"])";

        if (notification && notificationType) {
            Swal.fire({
                position: "top-end",
                text: notification,
                icon: notificationType,
                showConfirmButton: false,
                timer: 1000
            });
        }
    });
    </script>
</head>
<body>
    <div class="container">
        <div class="header d-flex justify-content-between align-items-center">
            <h1 class="flex-grow-1 text-center">
                Đơn Hàng
            </h1>
            <form class="d-flex flex-grow-1 justify-content-center" method="get">
                <div class="col-md-5 px-2 align-content-center">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Tìm kiếm theo tên người nhận..." value="@Request.QueryString["searchTerm"]" />
                </div>
                <div class="col-md-5 px-2 align-content-center">
                    <select name="sortOrder" class="form-select">
                        <option value="asc" @(Request.QueryString["sortOrder"] == "asc" ? "selected" : "")>Giá trị đơn hàng: Thấp đến Cao</option>
                        <option value="desc" @(Request.QueryString["sortOrder"] == "desc" ? "selected" : "")>Giá trị đơn hàng: Cao đến Thấp</option>
                    </select>
                </div>
                <div class="col-md-2 px-2 align-content-center">
                    <button type="submit" class="btn btn-warning">Lọc</button>
                </div>
            </form>
            <div class="action-buttons">
                <button class="btn btn-import" onclick="window.location.href='@Url.Action("Create", "Order")'">
                    <i class="fas fa-file-import"></i> Nhập hàng
                </button>
                <button class="btn btn-import" onclick="window.location.href='@Url.Action("Distribution", "Order")'">
                    <i class="fas bi bi-truck"></i> Phân hàng
                </button>
                <button class="btn btn-import" onclick="window.location.href='@Url.Action("ExportToExcel", "Order")'">
                    <i class="bi bi-file-earmark-spreadsheet"></i> Xuất Excel
                </button>
            </div>
        </div>
    </div>

    @if (!string.IsNullOrEmpty(Request.QueryString["searchTerm"]))
    {

        <p class="text-muted text-">Kết quả tìm kiếm cho: <b>@Request.QueryString["searchTerm"]</b></p>
    }

    <table class="table table-hover">
        <thead>
            <tr>
                <th>Trạng thái</th>
                <th>Loại</th>
                <th>Cân nặng(kg)</th>
                <th>Thể tích(m3)</th>
                <th>Tên người nhận</th>
                <th>Sdt</th>
                <th>Giá trị đơn hàng</th>
                <th>Phí vận chuyển</th>
                <th>Tổng tiền</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr onclick="handleRowClick(event, @item.Id)" style="cursor: pointer">
                    @if (item.TrangThai == "Lưu kho")
                    {
                        <td><p style="background-color:blue; text-align:center; color:aliceblue">@item.TrangThai  </p></td>
                    }@if (item.TrangThai == "Đang giao")
                    {
                        <td><p style="background-color:red; text-align:center; color:aliceblue ">@item.TrangThai  </p></td>
                    }
                    @if (item.TrangThai == "Đã giao")
                    {
                        <td><p style="background-color:limegreen; text-align:center; color:aliceblue ">@item.TrangThai  </p></td>
                    }
                    <td>@Html.DisplayFor(modelItem => item.Loai)</td>
                    <td>@Html.DisplayFor(modelItem => item.CanNang)</td>
                    <td>@Html.DisplayFor(modelItem => item.TheTich)</td>
                    <td>@Html.DisplayFor(modelItem => item.TenNguoiNhan)</td>
                    <td>@Html.DisplayFor(modelItem => item.Sdt)</td>
                    <td>@String.Format("{0:0,0}", item.GiaTriDonHang)</td>
                    <td>@String.Format("{0:0,0}", item.PhiVanChuyen)</td>
                    <td>@String.Format("{0:0,0}", item.TongTien)</td>
                    <td>
                        @Html.ActionLink("Sửa", "Edit", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                    </td>
                </tr>
            }
        </tbody>

    </table>
    <div id="detailModal" class="modal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content" style="background: url('/Contents/image/image_26-hinh-nen-powerpoint-tet.jpg'); background-size: cover">
                <div class="modal-header">
                    <h4 class="modal-title text-dark">Chi tiết đơn hàng</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p id="orderDetailContent">Đang tải...</p>

                </div>
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index",
                          new
                          {
                              page = page,
                              searchTerm = Request.QueryString["searchTerm"],
                              sortOrder = Request.QueryString["sortOrder"]
                          }),
                          new PagedListRenderOptions
                          {
                              DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                              DisplayLinkToLastPage = PagedListDisplayMode.Always,
                              DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                              DisplayLinkToNextPage = PagedListDisplayMode.Always,
                              MaximumPageNumbersToDisplay = 5,
                              DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                              UlElementClasses = new[] { "pagination" },
                              LiElementClasses = new[] { "page-item" },
                          })

    </div>

</body>
</html>
