@using PagedList
@using PagedList.Mvc
@model IPagedList<QuanLyKhoGiaoHangNhanh.Models.BanGiaoVatTu>

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/Contents/css/General.css" />

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function handleRowClick(event, supplyId) {
            if (event.target.closest('.btn')) {
                return;
            }
            var modal = new bootstrap.Modal(document.getElementById('detailModal'));
            modal.show();
            fetch(`/Supply/Detail/${supplyId}`)
                .then(response => response.text())
                .then(data => {
                    document.getElementById('supplyDetailContent').innerHTML = data;
                })
                .catch(error => {
                    console.error('Error loading supplyId details:', error);
                    document.getElementById('supplyIdDetailContent').innerHTML = 'Không thể tải chi tiết Vật tư.';
                });
        }
            document.addEventListener("DOMContentLoaded", function () {
    var notification = "@Html.Raw(TempData["Notification"])";
    var notificationType = "@Html.Raw(TempData["NotificationType"])";

    if (notification && notificationType) {
        Swal.fire({
            position: "top-end",
            text: notification,
            icon: notificationType,
            showConfirmButton: false,
            timer: 1000
     });
    }
});
    </script>



</head>
<body>
    @if (Model.Count == 0)
    {
        <h1 class="flex-grow-1 text-center">
            Vật tư đã cấp phát không có dữ liệu
        </h1>
    }
    else
    {
    <div class="container">
        <div class="header d-flex justify-content-between align-items-center">
            <h1 class="flex-grow-1 text-center">
                Vật tư đã cấp phát
            </h1>
            <form class="d-flex flex-grow-1 justify-content-center" method="get">
                <div class="col-md-5 px-2 align-content-center">
                    <input type="text" name="searchTerm" class="form-control" placeholder="Tìm kiếm theo tên vật tư..." value="@Request.QueryString["searchTerm"]" />
                </div>
                <div class="col-md-5 px-2 align-content-center">
                    @(Request.QueryString["sortSupply"] == "asc" ? "selected" : "")
                    @(Request.QueryString["sortSupply"] == "desc" ? "selected" : "")
                    
                    @Html.DropDownList("IdNhanVien", ViewBag.IdNhanVien as SelectList, "Tất cả", new { @class = "form-select" })
                </div>
                <div class="col-md-2 px-2 align-content-center">
                    <button type="submit" class="btn btn-warning">Lọc</button>
                </div>
            </form>
        </div>
        @if (!string.IsNullOrEmpty(Request.QueryString["searchTerm"]))
        {
            <p class="text-muted text-">Kết quả tìm kiếm cho: <b>@Request.QueryString["searchTerm"]</b></p>
        }
        <table class="table table-hover">
            <thead>
                <tr class="align-content-center">
                    <th>Tên vật tư</th>
                    <th>Số lượng</th>
                    <th>Nhân viên bàn giao</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr onclick="handleRowClick(event, @item.IdVatTu)" style="cursor: pointer">

                        <td>@Html.DisplayFor(modelItem => item.VatTu.TenVatTu)</td>
                        <td>@Html.DisplayFor(modelItem => item.SoLuong)</td>
                        <td>@Html.DisplayFor(modelItem => item.NhanVien.TenNhanVien)</td>
                        <td>
                            <a href="javascript:void(0);" class="btn btn-info btn-sm justify-content-sm-center"
                               onclick="confirmDelete(@item.IdVatTu)">
                                Thu hồi
                            </a>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
        <div id="detailModal" class="modal" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content" style="background: url('/Contents/image/image_26-hinh-nen-powerpoint-tet.jpg'); background-size: cover">
                    <div class="modal-header">
                        <h4 class="modal-title text-dark">Chi tiết vật tư</h4>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p id="supplyDetailContent">Đang tải...</p>
                    </div>
                </div>
            </div>
        </div>



    </div>

    <div class="d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("RecallSupply",
                                                                          new
                                                                          {
                                                                              page = page,
                                                                              searchTerm = Request.QueryString["searchTerm"],
                                                                              sortSupply = Request.QueryString["sortSupply"]
                                                                          }),
                                                                          new PagedListRenderOptions
                                                                          {
                                                                              DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                                                                              DisplayLinkToLastPage = PagedListDisplayMode.Always,
                                                                              DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                                                              DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                                                              MaximumPageNumbersToDisplay = 5,
                                                                              DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                                                                              UlElementClasses = new[] { "pagination" },
                                                                              LiElementClasses = new[] { "page-item" },
                                                                          })

    </div>
    <script>
        function confirmDelete(idVatTu) {
            Swal.fire({
                title: 'Bạn có chắc chắn muốn thu hồi?',
                text: "Thao tác này không thể hoàn tác!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Thu hồi',
                cancelButtonText: 'Hủy bỏ'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/Supply/Recall`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded',
                        },
                        body: `IdVatTu=${idVatTu}`
                    })
                        .then(response => {
                            if (response.ok) {
                                Swal.fire('Thành công!', 'Vật tư đã được thu hồi.', 'success').then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire('Lỗi!', 'Có lỗi xảy ra. Vui lòng thử lại.', 'error');
                            }
                        })
                        .catch(error => {
                            Swal.fire('Lỗi!', 'Có lỗi xảy ra. Vui lòng thử lại.', 'error');
                        });
                }
            });
        }
    </script>
    }
</body>
</html>
